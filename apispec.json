{
  "definitions": {
    "Baes": {
      "properties": {
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "etage_id": {
          "format": "int64",
          "type": "integer"
        },
        "id": {
          "format": "int64",
          "type": "integer"
        },
        "label": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "position": {
          "type": "object"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Batiment": {
      "properties": {
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "site_id": {
          "format": "int64",
          "type": "integer"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Carte": {
      "properties": {
        "center_lat": {
          "format": "float",
          "type": "number"
        },
        "center_lng": {
          "format": "float",
          "type": "number"
        },
        "chemin": {
          "type": "string"
        },
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "etage_id": {
          "format": "int64",
          "nullable": "true",
          "type": "integer"
        },
        "id": {
          "format": "int64",
          "type": "integer"
        },
        "site_id": {
          "format": "int64",
          "nullable": "true",
          "type": "integer"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        },
        "zoom": {
          "format": "float",
          "type": "number"
        }
      },
      "type": "object"
    },
    "Etage": {
      "properties": {
        "batiment_id": {
          "format": "int64",
          "type": "integer"
        },
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Role": {
      "properties": {
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Site": {
      "properties": {
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "format": "int64",
          "type": "integer"
        },
        "name": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Status": {
      "properties": {
        "acknowledged_at": {
          "format": "date-time",
          "nullable": true,
          "type": "string"
        },
        "acknowledged_by_user_id": {
          "nullable": true,
          "type": "integer"
        },
        "baes_id": {
          "format": "int64",
          "type": "integer"
        },
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "erreur": {
          "type": "integer"
        },
        "id": {
          "format": "int64",
          "type": "integer"
        },
        "is_ignored": {
          "type": "boolean"
        },
        "is_solved": {
          "type": "boolean"
        },
        "timestamp": {
          "format": "date-time",
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "User": {
      "properties": {
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "format": "int64",
          "type": "integer"
        },
        "login": {
          "type": "string"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        }
      },
      "type": "object"
    },
    "UserSiteRole": {
      "properties": {
        "created_at": {
          "format": "date-time",
          "type": "string"
        },
        "id": {
          "format": "int64",
          "type": "integer"
        },
        "role_id": {
          "format": "int64",
          "type": "integer"
        },
        "site_id": {
          "format": "int64",
          "type": "integer"
        },
        "updated_at": {
          "format": "date-time",
          "type": "string"
        },
        "user_id": {
          "format": "int64",
          "type": "integer"
        }
      },
      "type": "object"
    }
  },
  "info": {
    "description": "API pour la gestion des BAES",
    "title": "BAES API",
    "version": "1.0"
  },
  "paths": {
    "/auth/login": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Connexion de l'utilisateur via JSON. Fournissez \"login\" et \"password\" dans le corps de la requ\u00eate.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "login": {
                  "example": "monlogin",
                  "type": "string"
                },
                "password": {
                  "example": "monmotdepasse",
                  "type": "string"
                }
              },
              "required": [
                "login",
                "password"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Utilisateur connect\u00e9 avec succ\u00e8s",
            "schema": {
              "properties": {
                "global_roles": {
                  "description": "R\u00f4les globaux de l'utilisateur (non li\u00e9s \u00e0 un site sp\u00e9cifique)",
                  "items": {
                    "properties": {
                      "id": {
                        "example": 1,
                        "type": "integer"
                      },
                      "name": {
                        "example": "super_admin",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "message": {
                  "example": "Connect\u00e9",
                  "type": "string"
                },
                "sites": {
                  "items": {
                    "properties": {
                      "id": {
                        "example": 3,
                        "type": "integer"
                      },
                      "name": {
                        "example": "Site A",
                        "type": "string"
                      },
                      "roles": {
                        "items": {
                          "properties": {
                            "id": {
                              "example": 2,
                              "type": "integer"
                            },
                            "name": {
                              "example": "admin",
                              "type": "string"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "token": {
                  "description": "JWT token d'authentification",
                  "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...",
                  "type": "string"
                },
                "user_id": {
                  "example": 1,
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "401": {
            "description": "Identifiants invalides",
            "schema": {
              "properties": {
                "error": {
                  "example": "Identifiants invalides",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/auth/logout": {
      "get": {
        "description": "D\u00e9connecte l'utilisateur connect\u00e9.",
        "responses": {
          "200": {
            "description": "Utilisateur d\u00e9connect\u00e9 avec succ\u00e8s",
            "schema": {
              "properties": {
                "message": {
                  "example": "D\u00e9connect\u00e9",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Authentication"
        ]
      },
      "post": {
        "description": "D\u00e9connecte l'utilisateur connect\u00e9.",
        "responses": {
          "200": {
            "description": "Utilisateur d\u00e9connect\u00e9 avec succ\u00e8s",
            "schema": {
              "properties": {
                "message": {
                  "example": "D\u00e9connect\u00e9",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "tags": [
          "Authentication"
        ]
      }
    },
    "/baes/": {
      "get": {
        "description": "R\u00e9cup\u00e8re la liste de tous les BAES.",
        "responses": {
          "200": {
            "description": "Liste des BAES.",
            "schema": {
              "items": {
                "properties": {
                  "etage_id": {
                    "example": 1,
                    "type": "integer"
                  },
                  "id": {
                    "example": 1,
                    "format": "int64",
                    "type": "integer"
                  },
                  "label": {
                    "example": "\u00c9tiquette BAES 1",
                    "type": "string"
                  },
                  "name": {
                    "example": "BAES 1",
                    "type": "string"
                  },
                  "position": {
                    "example": {
                      "x": 100,
                      "y": 200
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "500": {
            "description": "Erreur interne."
          }
        },
        "tags": [
          "BAES CRUD"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Cr\u00e9e un nouveau BAES.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "etage_id": {
                  "example": 1,
                  "type": "integer"
                },
                "label": {
                  "example": "\u00c9tiquette BAES 1",
                  "type": "string"
                },
                "name": {
                  "example": "BAES 1",
                  "type": "string"
                },
                "position": {
                  "example": {
                    "x": 100,
                    "y": 200
                  },
                  "type": "object"
                }
              },
              "required": [
                "name",
                "position",
                "etage_id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "BAES cr\u00e9\u00e9 avec succ\u00e8s.",
            "schema": {
              "properties": {
                "etage_id": {
                  "example": 1,
                  "type": "integer"
                },
                "id": {
                  "example": 1,
                  "format": "int64",
                  "type": "integer"
                },
                "label": {
                  "example": "\u00c9tiquette BAES 1",
                  "type": "string"
                },
                "name": {
                  "example": "BAES 1",
                  "type": "string"
                },
                "position": {
                  "example": {
                    "x": 100,
                    "y": 200
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Mauvaise requ\u00eate."
          }
        },
        "tags": [
          "BAES CRUD"
        ]
      }
    },
    "/baes/user/{user_id}": {
      "get": {
        "description": "R\u00e9cup\u00e8re le dernier status de chaque BAES visible par un utilisateur et chaque BAES non attribu\u00e9 \u00e0 un \u00e9tage.",
        "parameters": [
          {
            "description": "ID de l'utilisateur",
            "in": "path",
            "name": "user_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des BAES avec leur dernier status.",
            "schema": {
              "items": {
                "properties": {
                  "etage_id": {
                    "example": 1,
                    "nullable": true,
                    "type": "integer"
                  },
                  "id": {
                    "example": 1,
                    "format": "int64",
                    "type": "integer"
                  },
                  "label": {
                    "example": "\u00c9tiquette BAES 1",
                    "type": "string"
                  },
                  "latest_status": {
                    "nullable": true,
                    "properties": {
                      "erreur": {
                        "example": 1,
                        "type": "integer"
                      },
                      "id": {
                        "example": 1,
                        "type": "integer"
                      },
                      "is_ignored": {
                        "example": false,
                        "type": "boolean"
                      },
                      "is_solved": {
                        "example": false,
                        "type": "boolean"
                      },
                      "temperature": {
                        "example": 25.5,
                        "format": "float",
                        "nullable": true,
                        "type": "number"
                      },
                      "timestamp": {
                        "example": "2023-01-01T12:00:00Z",
                        "format": "date-time",
                        "type": "string"
                      },
                      "vibration": {
                        "example": true,
                        "nullable": true,
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  },
                  "name": {
                    "example": "BAES 1",
                    "type": "string"
                  },
                  "position": {
                    "example": {
                      "x": 100,
                      "y": 200
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "404": {
            "description": "Utilisateur non trouv\u00e9."
          },
          "500": {
            "description": "Erreur interne."
          }
        },
        "summary": "R\u00e9cup\u00e8re le dernier status de chaque BAES visible par un utilisateur et chaque BAES non attribu\u00e9 \u00e0 un \u00e9tage.",
        "tags": [
          "BAES Operations"
        ]
      }
    },
    "/baes/without-etage": {
      "get": {
        "description": "R\u00e9cup\u00e8re la liste de tous les BAES qui n'ont pas d'\u00e9tage assign\u00e9 (etage_id = null).",
        "responses": {
          "200": {
            "description": "Liste des BAES sans \u00e9tage.",
            "schema": {
              "items": {
                "properties": {
                  "etage_id": {
                    "example": null,
                    "type": "null"
                  },
                  "id": {
                    "example": 1,
                    "format": "int64",
                    "type": "integer"
                  },
                  "label": {
                    "example": "\u00c9tiquette BAES 1",
                    "type": "string"
                  },
                  "name": {
                    "example": "BAES 1",
                    "type": "string"
                  },
                  "position": {
                    "example": {
                      "x": 100,
                      "y": 200
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "500": {
            "description": "Erreur interne."
          }
        },
        "tags": [
          "BAES CRUD"
        ]
      }
    },
    "/baes/{baes_id}": {
      "delete": {
        "description": "Supprime un BAES par son ID.",
        "parameters": [
          {
            "description": "ID du BAES \u00e0 supprimer",
            "format": "int64",
            "in": "path",
            "name": "baes_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "BAES supprim\u00e9 avec succ\u00e8s.",
            "schema": {
              "properties": {
                "message": {
                  "example": "BAES supprim\u00e9 avec succ\u00e8s",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "BAES non trouv\u00e9."
          }
        },
        "tags": [
          "BAES CRUD"
        ]
      },
      "get": {
        "description": "R\u00e9cup\u00e8re un BAES par son ID.",
        "parameters": [
          {
            "description": "ID du BAES \u00e0 r\u00e9cup\u00e9rer",
            "format": "int64",
            "in": "path",
            "name": "baes_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "D\u00e9tails du BAES.",
            "schema": {
              "properties": {
                "etage_id": {
                  "example": 1,
                  "type": "integer"
                },
                "id": {
                  "example": 1,
                  "format": "int64",
                  "type": "integer"
                },
                "label": {
                  "example": "\u00c9tiquette BAES 1",
                  "type": "string"
                },
                "name": {
                  "example": "BAES 1",
                  "type": "string"
                },
                "position": {
                  "example": {
                    "x": 100,
                    "y": 200
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "BAES non trouv\u00e9."
          }
        },
        "tags": [
          "BAES CRUD"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Met \u00e0 jour un BAES existant par son ID.",
        "parameters": [
          {
            "description": "ID du BAES \u00e0 mettre \u00e0 jour",
            "format": "int64",
            "in": "path",
            "name": "baes_id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "etage_id": {
                  "example": 2,
                  "type": "integer"
                },
                "label": {
                  "example": "\u00c9tiquette BAES mise \u00e0 jour",
                  "type": "string"
                },
                "name": {
                  "example": "BAES mis \u00e0 jour",
                  "type": "string"
                },
                "position": {
                  "example": {
                    "x": 150,
                    "y": 250
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "BAES mis \u00e0 jour avec succ\u00e8s.",
            "schema": {
              "properties": {
                "etage_id": {
                  "example": 2,
                  "type": "integer"
                },
                "id": {
                  "example": 1,
                  "format": "int64",
                  "type": "integer"
                },
                "label": {
                  "example": "\u00c9tiquette BAES mise \u00e0 jour",
                  "type": "string"
                },
                "name": {
                  "example": "BAES mis \u00e0 jour",
                  "type": "string"
                },
                "position": {
                  "example": {
                    "x": 150,
                    "y": 250
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "BAES non trouv\u00e9."
          }
        },
        "tags": [
          "BAES CRUD"
        ]
      }
    },
    "/batiments/": {
      "get": {
        "description": "R\u00e9cup\u00e8re la liste de tous les b\u00e2timents.",
        "responses": {
          "200": {
            "description": "Liste des b\u00e2timents.",
            "schema": {
              "items": {
                "properties": {
                  "id": {
                    "example": 1,
                    "type": "integer"
                  },
                  "name": {
                    "example": "Batiment 1",
                    "type": "string"
                  },
                  "polygon_points": {
                    "type": "object"
                  },
                  "site_id": {
                    "example": 1,
                    "type": "integer"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "500": {
            "description": "Erreur interne."
          }
        },
        "tags": [
          "Batiment CRUD"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Cr\u00e9e un nouveau b\u00e2timent.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "name": {
                  "example": "Batiment 1",
                  "type": "string"
                },
                "polygon_points": {
                  "example": {
                    "points": [
                      [
                        0,
                        0
                      ],
                      [
                        1,
                        1
                      ]
                    ]
                  },
                  "type": "object"
                },
                "site_id": {
                  "example": 1,
                  "type": "integer"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "B\u00e2timent cr\u00e9\u00e9 avec succ\u00e8s.",
            "schema": {
              "properties": {
                "id": {
                  "example": 1,
                  "type": "integer"
                },
                "name": {
                  "example": "Batiment 1",
                  "type": "string"
                },
                "polygon_points": {
                  "type": "object"
                },
                "site_id": {
                  "example": 1,
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Mauvaise requ\u00eate."
          }
        },
        "tags": [
          "Batiment CRUD"
        ]
      }
    },
    "/batiments/{batiment_id}": {
      "delete": {
        "description": "Supprime un b\u00e2timent par son ID.",
        "parameters": [
          {
            "description": "ID du b\u00e2timent \u00e0 supprimer",
            "in": "path",
            "name": "batiment_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "B\u00e2timent supprim\u00e9 avec succ\u00e8s.",
            "schema": {
              "properties": {
                "message": {
                  "example": "B\u00e2timent supprim\u00e9 avec succ\u00e8s",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "B\u00e2timent non trouv\u00e9."
          }
        },
        "tags": [
          "Batiment CRUD"
        ]
      },
      "get": {
        "description": "R\u00e9cup\u00e8re un b\u00e2timent par son ID.",
        "parameters": [
          {
            "description": "ID du b\u00e2timent \u00e0 r\u00e9cup\u00e9rer",
            "in": "path",
            "name": "batiment_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "D\u00e9tails du b\u00e2timent.",
            "schema": {
              "properties": {
                "id": {
                  "example": 1,
                  "type": "integer"
                },
                "name": {
                  "example": "Batiment 1",
                  "type": "string"
                },
                "polygon_points": {
                  "type": "object"
                },
                "site_id": {
                  "example": 1,
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "B\u00e2timent non trouv\u00e9."
          }
        },
        "tags": [
          "Batiment CRUD"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Met \u00e0 jour un b\u00e2timent existant par son ID.",
        "parameters": [
          {
            "description": "ID du b\u00e2timent \u00e0 mettre \u00e0 jour",
            "in": "path",
            "name": "batiment_id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "name": {
                  "example": "Batiment mis \u00e0 jour",
                  "type": "string"
                },
                "polygon_points": {
                  "example": {
                    "points": [
                      [
                        1,
                        1
                      ],
                      [
                        2,
                        2
                      ]
                    ]
                  },
                  "type": "object"
                },
                "site_id": {
                  "example": 2,
                  "type": "integer"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "B\u00e2timent mis \u00e0 jour avec succ\u00e8s.",
            "schema": {
              "properties": {
                "id": {
                  "example": 1,
                  "type": "integer"
                },
                "name": {
                  "example": "Batiment mis \u00e0 jour",
                  "type": "string"
                },
                "polygon_points": {
                  "type": "object"
                },
                "site_id": {
                  "example": 2,
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "B\u00e2timent non trouv\u00e9."
          }
        },
        "tags": [
          "Batiment CRUD"
        ]
      }
    },
    "/batiments/{batiment_id}/floors": {
      "get": {
        "description": "R\u00e9cup\u00e8re tous les \u00e9tages d'un b\u00e2timent par son ID.",
        "parameters": [
          {
            "description": "ID du b\u00e2timent dont on veut r\u00e9cup\u00e9rer les \u00e9tages",
            "in": "path",
            "name": "batiment_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des \u00e9tages du b\u00e2timent.",
            "schema": {
              "items": {
                "properties": {
                  "batiment_id": {
                    "example": 1,
                    "type": "integer"
                  },
                  "id": {
                    "example": 1,
                    "type": "integer"
                  },
                  "name": {
                    "example": "Etage 1",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "404": {
            "description": "B\u00e2timent non trouv\u00e9."
          }
        },
        "tags": [
          "Batiment CRUD"
        ]
      }
    },
    "/cartes/carte/{carte_id}": {
      "get": {
        "description": "Retourne le fichier image upload\u00e9 \u00e0 partir de l'id de la carte",
        "parameters": [
          {
            "description": "ID de la carte dont on veut r\u00e9cup\u00e9rer l'image.",
            "in": "path",
            "name": "carte_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Fichier image renvoy\u00e9 avec succ\u00e8s."
          },
          "404": {
            "description": "Fichier non trouv\u00e9."
          }
        },
        "tags": [
          "carte crud"
        ]
      },
      "put": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Met \u00e0 jour une carte existante avec de nouveaux param\u00e8tres. Vous pouvez mettre \u00e0 jour l'image, les coordonn\u00e9es du centre, le zoom, et l'association \u00e0 un site ou un \u00e9tage. Si vous fournissez un nouveau fichier, l'ancien sera remplac\u00e9.",
        "parameters": [
          {
            "description": "ID de la carte \u00e0 mettre \u00e0 jour.",
            "in": "path",
            "name": "carte_id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Nouveau fichier image de la carte (png, jpg, etc.)",
            "in": "formData",
            "name": "file",
            "required": false,
            "type": "file"
          },
          {
            "description": "Nouvelle latitude du centre de la carte",
            "in": "formData",
            "name": "center_lat",
            "required": false,
            "type": "number"
          },
          {
            "description": "Nouvelle longitude du centre de la carte",
            "in": "formData",
            "name": "center_lng",
            "required": false,
            "type": "number"
          },
          {
            "description": "Nouveau niveau de zoom de la carte",
            "in": "formData",
            "name": "zoom",
            "required": false,
            "type": "number"
          },
          {
            "description": "Nouvel ID du site auquel la carte sera associ\u00e9e (si la carte est li\u00e9e \u00e0 un site)",
            "in": "formData",
            "name": "site_id",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Nouvel ID de l'\u00e9tage auquel la carte sera associ\u00e9e (si la carte est li\u00e9e \u00e0 un \u00e9tage)",
            "in": "formData",
            "name": "etage_id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Carte mise \u00e0 jour avec succ\u00e8s.",
            "schema": {
              "properties": {
                "carte": {
                  "properties": {
                    "center_lat": {
                      "example": 48.8566,
                      "type": "number"
                    },
                    "center_lng": {
                      "example": 2.3522,
                      "type": "number"
                    },
                    "chemin": {
                      "example": "http://localhost:5000/uploads/vue_site.jpg",
                      "type": "string"
                    },
                    "etage_id": {
                      "example": null,
                      "type": "integer"
                    },
                    "id": {
                      "example": 1,
                      "type": "integer"
                    },
                    "site_id": {
                      "example": 3,
                      "type": "integer"
                    },
                    "zoom": {
                      "example": 1.0,
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "message": {
                  "example": "Carte mise \u00e0 jour avec succ\u00e8s",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Erreur de requ\u00eate, param\u00e8tres invalides ou association incorrecte."
          },
          "404": {
            "description": "Carte non trouv\u00e9e."
          }
        },
        "tags": [
          "carte crud"
        ]
      }
    },
    "/cartes/upload-carte": {
      "post": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Upload d'une carte avec ses param\u00e8tres (centre, zoom) et son association \u00e0 un site ou un \u00e9tage. Vous devez fournir l'ID du site (`site_id`) ou l'ID de l'\u00e9tage (`etage_id`), mais pas les deux. La r\u00e9ponse renvoie une URL accessible pour l'image upload\u00e9e.",
        "parameters": [
          {
            "description": "Fichier image de la carte (png, jpg, etc.)",
            "in": "formData",
            "name": "file",
            "required": true,
            "type": "file"
          },
          {
            "default": 0.0,
            "description": "Latitude du centre de la carte",
            "in": "formData",
            "name": "center_lat",
            "required": false,
            "type": "number"
          },
          {
            "default": 0.0,
            "description": "Longitude du centre de la carte",
            "in": "formData",
            "name": "center_lng",
            "required": false,
            "type": "number"
          },
          {
            "default": 1.0,
            "description": "Niveau de zoom de la carte",
            "in": "formData",
            "name": "zoom",
            "required": false,
            "type": "number"
          },
          {
            "description": "ID du site auquel la carte sera associ\u00e9e (si la carte est li\u00e9e \u00e0 un site)",
            "in": "formData",
            "name": "site_id",
            "required": false,
            "type": "integer"
          },
          {
            "description": "ID de l'\u00e9tage auquel la carte sera associ\u00e9e (si la carte est li\u00e9e \u00e0 un \u00e9tage)",
            "in": "formData",
            "name": "etage_id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Fichier upload\u00e9 avec succ\u00e8s, carte sauvegard\u00e9e avec une URL accessible pour l'image.",
            "schema": {
              "properties": {
                "carte": {
                  "properties": {
                    "center_lat": {
                      "example": 48.8566,
                      "type": "number"
                    },
                    "center_lng": {
                      "example": 2.3522,
                      "type": "number"
                    },
                    "chemin": {
                      "example": "http://localhost:5000/uploads/vue_site.jpg",
                      "type": "string"
                    },
                    "etage_id": {
                      "example": null,
                      "type": "integer"
                    },
                    "id": {
                      "example": 1,
                      "type": "integer"
                    },
                    "site_id": {
                      "example": 3,
                      "type": "integer"
                    },
                    "zoom": {
                      "example": 1.0,
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "message": {
                  "example": "Fichier upload\u00e9 avec succ\u00e8s",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Erreur de requ\u00eate, fichier non fourni, param\u00e8tres invalides ou aucune association renseign\u00e9e."
          }
        },
        "tags": [
          "carte crud"
        ]
      }
    },
    "/cartes/uploads/{filename}": {
      "get": {
        "description": "Retourne le fichier image upload\u00e9 \u00e0 partir du nom de fichier fourni.",
        "parameters": [
          {
            "description": "Nom du fichier \u00e0 servir.",
            "in": "path",
            "name": "filename",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Fichier image renvoy\u00e9 avec succ\u00e8s."
          },
          "404": {
            "description": "Fichier non trouv\u00e9."
          }
        },
        "tags": [
          "carte crud"
        ]
      }
    },
    "/config/": {
      "get": {
        "description": "R\u00e9cup\u00e8re la liste de toutes les configurations.",
        "responses": {
          "200": {
            "description": "Liste des configurations.",
            "schema": {
              "items": {
                "properties": {
                  "id": {
                    "example": 1,
                    "format": "int64",
                    "type": "integer"
                  },
                  "key": {
                    "example": "site_name",
                    "type": "string"
                  },
                  "value": {
                    "example": "Mon Site",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "500": {
            "description": "Erreur interne."
          }
        },
        "tags": [
          "Configuration CRUD"
        ]
      },
      "post": {
        "description": "Cr\u00e9e une nouvelle configuration.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "key": {
                    "example": "site_name",
                    "type": "string"
                  },
                  "value": {
                    "example": "Mon Site",
                    "type": "string"
                  }
                },
                "required": [
                  "key",
                  "value"
                ],
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Configuration cr\u00e9\u00e9e avec succ\u00e8s.",
            "schema": {
              "properties": {
                "id": {
                  "example": 1,
                  "format": "int64",
                  "type": "integer"
                },
                "key": {
                  "example": "site_name",
                  "type": "string"
                },
                "value": {
                  "example": "Mon Site",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Donn\u00e9es invalides ou manquantes."
          },
          "409": {
            "description": "Une configuration avec cette cl\u00e9 existe d\u00e9j\u00e0."
          },
          "500": {
            "description": "Erreur interne."
          }
        },
        "tags": [
          "Configuration CRUD"
        ]
      }
    },
    "/config/key/{key}": {
      "get": {
        "description": "R\u00e9cup\u00e8re une configuration par sa cl\u00e9.",
        "parameters": [
          {
            "description": "Cl\u00e9 de la configuration \u00e0 r\u00e9cup\u00e9rer",
            "in": "path",
            "name": "key",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Configuration r\u00e9cup\u00e9r\u00e9e avec succ\u00e8s.",
            "schema": {
              "properties": {
                "id": {
                  "example": 1,
                  "format": "int64",
                  "type": "integer"
                },
                "key": {
                  "example": "site_name",
                  "type": "string"
                },
                "value": {
                  "example": "Mon Site",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Configuration non trouv\u00e9e."
          },
          "500": {
            "description": "Erreur interne."
          }
        },
        "tags": [
          "Configuration CRUD"
        ]
      }
    },
    "/config/{config_id}": {
      "put": {
        "description": "Modifie une configuration par son ID.",
        "parameters": [
          {
            "description": "ID de la configuration \u00e0 modifier",
            "format": "int64",
            "in": "path",
            "name": "config_id",
            "required": true,
            "type": "integer"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "key": {
                    "example": "site_name",
                    "type": "string"
                  },
                  "value": {
                    "example": "Mon Site",
                    "type": "string"
                  }
                },
                "type": "object"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Configuration modifi\u00e9e avec succ\u00e8s."
          },
          "404": {
            "description": "Configuration non trouv\u00e9e."
          },
          "500": {
            "description": "Erreur interne."
          }
        },
        "tags": [
          "Configuration CRUD"
        ]
      }
    },
    "/etages/": {
      "get": {
        "description": "R\u00e9cup\u00e8re la liste de tous les \u00e9tages.",
        "responses": {
          "200": {
            "description": "Liste des \u00e9tages.",
            "schema": {
              "items": {
                "properties": {
                  "batiment_id": {
                    "example": 1,
                    "type": "integer"
                  },
                  "id": {
                    "example": 1,
                    "type": "integer"
                  },
                  "name": {
                    "example": "Etage 1",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "500": {
            "description": "Erreur interne."
          }
        },
        "tags": [
          "Etage CRUD"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Cr\u00e9e un nouvel \u00e9tage.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "batiment_id": {
                  "example": 1,
                  "type": "integer"
                },
                "name": {
                  "example": "Etage 1",
                  "type": "string"
                }
              },
              "required": [
                "name",
                "batiment_id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "\u00c9tage cr\u00e9\u00e9 avec succ\u00e8s.",
            "schema": {
              "properties": {
                "batiment_id": {
                  "example": 1,
                  "type": "integer"
                },
                "id": {
                  "example": 1,
                  "type": "integer"
                },
                "name": {
                  "example": "Etage 1",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Mauvaise requ\u00eate."
          }
        },
        "tags": [
          "Etage CRUD"
        ]
      }
    },
    "/etages/carte/update_by_site_etage/{site_id}/{etage_id}": {
      "put": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Met \u00e0 jour une carte existante associ\u00e9e \u00e0 un \u00e9tage d'un site sp\u00e9cifique. Vous pouvez mettre \u00e0 jour l'image, les coordonn\u00e9es du centre et le zoom. Si vous fournissez un nouveau fichier, l'ancien sera remplac\u00e9.",
        "parameters": [
          {
            "description": "ID du site",
            "in": "path",
            "name": "site_id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "ID de l'\u00e9tage dont la carte sera mise \u00e0 jour",
            "in": "path",
            "name": "etage_id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Nouveau fichier image de la carte (png, jpg, etc.)",
            "in": "formData",
            "name": "file",
            "required": false,
            "type": "file"
          },
          {
            "description": "Nouvelle latitude du centre de la carte",
            "in": "formData",
            "name": "center_lat",
            "required": false,
            "type": "number"
          },
          {
            "description": "Nouvelle longitude du centre de la carte",
            "in": "formData",
            "name": "center_lng",
            "required": false,
            "type": "number"
          },
          {
            "description": "Nouveau niveau de zoom de la carte",
            "in": "formData",
            "name": "zoom",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Carte mise \u00e0 jour avec succ\u00e8s.",
            "schema": {
              "properties": {
                "carte": {
                  "properties": {
                    "center_lat": {
                      "example": 48.8566,
                      "type": "number"
                    },
                    "center_lng": {
                      "example": 2.3522,
                      "type": "number"
                    },
                    "chemin": {
                      "example": "http://localhost:5000/uploads/etage_carte.jpg",
                      "type": "string"
                    },
                    "etage_id": {
                      "example": 2,
                      "type": "integer"
                    },
                    "id": {
                      "example": 1,
                      "type": "integer"
                    },
                    "site_id": {
                      "example": null,
                      "type": "integer"
                    },
                    "zoom": {
                      "example": 1.0,
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "message": {
                  "example": "Carte mise \u00e0 jour avec succ\u00e8s",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Erreur de requ\u00eate ou param\u00e8tres invalides."
          },
          "404": {
            "description": "Site, \u00e9tage ou carte non trouv\u00e9."
          }
        },
        "tags": [
          "carte crud"
        ]
      }
    },
    "/etages/carte/{etage_id}/assign": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Assigne une carte existante \u00e0 un \u00e9tage. Le JSON doit contenir 'card_id'.",
        "parameters": [
          {
            "description": "ID de l'\u00e9tage",
            "in": "path",
            "name": "etage_id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "card_id": {
                  "example": 3,
                  "type": "integer"
                }
              },
              "required": [
                "card_id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Carte assign\u00e9e \u00e0 l'\u00e9tage avec succ\u00e8s.",
            "schema": {
              "properties": {
                "message": {
                  "example": "Carte assign\u00e9e \u00e0 l'\u00e9tage avec succ\u00e8s.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Carte d\u00e9j\u00e0 assign\u00e9e ou champ manquant."
          },
          "404": {
            "description": "\u00c9tage ou carte non trouv\u00e9."
          },
          "500": {
            "description": "Erreur interne."
          }
        },
        "tags": [
          "assignation carte"
        ]
      }
    },
    "/etages/{etage_id}": {
      "delete": {
        "description": "Supprime un \u00e9tage par son ID, met \u00e0 jour les BAES associ\u00e9s (etage_id = null) et supprime la carte associ\u00e9e.",
        "parameters": [
          {
            "description": "ID de l'\u00e9tage \u00e0 supprimer",
            "in": "path",
            "name": "etage_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "\u00c9tage supprim\u00e9 avec succ\u00e8s.",
            "schema": {
              "properties": {
                "baes_updated": {
                  "example": 3,
                  "type": "integer"
                },
                "carte_deleted": {
                  "example": 1,
                  "type": "integer"
                },
                "message": {
                  "example": "\u00c9tage supprim\u00e9 avec succ\u00e8s",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "\u00c9tage non trouv\u00e9."
          }
        },
        "tags": [
          "Etage CRUD"
        ]
      },
      "get": {
        "description": "R\u00e9cup\u00e8re un \u00e9tage par son ID.",
        "parameters": [
          {
            "description": "ID de l'\u00e9tage \u00e0 r\u00e9cup\u00e9rer",
            "in": "path",
            "name": "etage_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "D\u00e9tails de l'\u00e9tage.",
            "schema": {
              "properties": {
                "batiment_id": {
                  "example": 1,
                  "type": "integer"
                },
                "id": {
                  "example": 1,
                  "type": "integer"
                },
                "name": {
                  "example": "Etage 1",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "\u00c9tage non trouv\u00e9."
          }
        },
        "tags": [
          "Etage CRUD"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Met \u00e0 jour un \u00e9tage existant par son ID.",
        "parameters": [
          {
            "description": "ID de l'\u00e9tage \u00e0 mettre \u00e0 jour",
            "in": "path",
            "name": "etage_id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "batiment_id": {
                  "example": 2,
                  "type": "integer"
                },
                "name": {
                  "example": "Etage mis \u00e0 jour",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "\u00c9tage mis \u00e0 jour avec succ\u00e8s.",
            "schema": {
              "properties": {
                "batiment_id": {
                  "example": 2,
                  "type": "integer"
                },
                "id": {
                  "example": 1,
                  "type": "integer"
                },
                "name": {
                  "example": "Etage mis \u00e0 jour",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "\u00c9tage non trouv\u00e9."
          }
        },
        "tags": [
          "Etage CRUD"
        ]
      }
    },
    "/etages/{etage_id}/baes": {
      "get": {
        "description": "R\u00e9cup\u00e8re tous les BAES d'un \u00e9tage par son ID.",
        "parameters": [
          {
            "description": "ID de l'\u00e9tage dont on veut r\u00e9cup\u00e9rer les BAES",
            "in": "path",
            "name": "etage_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des BAES de l'\u00e9tage.",
            "schema": {
              "items": {
                "properties": {
                  "erreurs": {
                    "items": {
                      "properties": {
                        "erreur": {
                          "example": 1,
                          "type": "integer"
                        },
                        "id": {
                          "example": 1,
                          "type": "integer"
                        },
                        "is_ignored": {
                          "example": false,
                          "type": "boolean"
                        },
                        "is_solved": {
                          "example": false,
                          "type": "boolean"
                        },
                        "timestamp": {
                          "example": "2025-04-03T12:34:56Z",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  },
                  "etage_id": {
                    "example": 1,
                    "type": "integer"
                  },
                  "id": {
                    "example": 1,
                    "format": "int64",
                    "type": "integer"
                  },
                  "name": {
                    "example": "BAES 1",
                    "type": "string"
                  },
                  "position": {
                    "example": {
                      "x": 100,
                      "y": 200
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "404": {
            "description": "\u00c9tage non trouv\u00e9."
          }
        },
        "tags": [
          "Etage CRUD"
        ]
      }
    },
    "/general/batiment/{batiment_id}/alldata": {
      "get": {
        "description": "Retourne toutes les informations li\u00e9es \u00e0 un b\u00e2timent : ses \u00e9tages, les cartes associ\u00e9es et les BAES pr\u00e9sents.",
        "parameters": [
          {
            "description": "L'ID du b\u00e2timent",
            "in": "path",
            "name": "batiment_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Donn\u00e9es compl\u00e8tes du b\u00e2timent",
            "schema": {
              "properties": {
                "etages": {
                  "items": {
                    "properties": {
                      "baes": {
                        "items": {
                          "properties": {
                            "erreurs": {
                              "items": {
                                "properties": {
                                  "erreur": {
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "id": {
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "is_ignored": {
                                    "example": false,
                                    "type": "boolean"
                                  },
                                  "is_solved": {
                                    "example": false,
                                    "type": "boolean"
                                  },
                                  "temperature": {
                                    "example": 22.5,
                                    "type": "number"
                                  },
                                  "timestamp": {
                                    "example": "2025-04-03T12:34:56Z",
                                    "type": "string"
                                  },
                                  "vibration": {
                                    "example": true,
                                    "type": "boolean"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "id": {
                              "example": 1,
                              "type": "integer"
                            },
                            "name": {
                              "example": "BAES 1",
                              "type": "string"
                            },
                            "position": {
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "carte": {
                        "properties": {
                          "center_lat": {
                            "example": 48.8566,
                            "type": "number"
                          },
                          "center_lng": {
                            "example": 2.3522,
                            "type": "number"
                          },
                          "chemin": {
                            "example": "/path/to/image.png",
                            "type": "string"
                          },
                          "etage_id": {
                            "example": 1,
                            "type": "integer"
                          },
                          "id": {
                            "example": 1,
                            "type": "integer"
                          },
                          "site_id": {
                            "example": 1,
                            "type": "integer"
                          },
                          "zoom": {
                            "example": 10,
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "id": {
                        "example": 1,
                        "type": "integer"
                      },
                      "name": {
                        "example": "Etage 1",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "id": {
                  "example": 1,
                  "type": "integer"
                },
                "name": {
                  "example": "Batiment A",
                  "type": "string"
                },
                "polygon_points": {
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "B\u00e2timent non trouv\u00e9."
          }
        },
        "summary": "Route qui retourne pour un b\u00e2timent donn\u00e9 l'ensemble de ses \u00e9tages,\nainsi que pour chaque \u00e9tage, sa carte et ses BAES avec leurs erreurs.",
        "tags": [
          "general"
        ]
      }
    },
    "/general/user/{user_id}/alldata": {
      "get": {
        "description": "Retourne pour un utilisateur donn\u00e9 l'ensemble des sites auxquels il a acc\u00e8s, ainsi que pour chaque site, la liste de ses b\u00e2timents, pour chaque b\u00e2timent, la liste de ses \u00e9tages, pour chaque \u00e9tage, la liste de ses BAES et, pour chaque BAES, l'historique de ses statuts. Pour les cartes, seule l'id est retourn\u00e9e.",
        "parameters": [
          {
            "description": "L'ID de l'utilisateur",
            "in": "path",
            "name": "user_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Donn\u00e9es compl\u00e8tes de l'utilisateur",
            "schema": {
              "properties": {
                "sites": {
                  "items": {
                    "properties": {
                      "batiments": {
                        "items": {
                          "properties": {
                            "etages": {
                              "items": {
                                "properties": {
                                  "baes": {
                                    "items": {
                                      "properties": {
                                        "erreurs": {
                                          "items": {
                                            "properties": {
                                              "erreur": {
                                                "example": 1,
                                                "type": "integer"
                                              },
                                              "id": {
                                                "example": 1,
                                                "type": "integer"
                                              },
                                              "is_ignored": {
                                                "example": false,
                                                "type": "boolean"
                                              },
                                              "is_solved": {
                                                "example": false,
                                                "type": "boolean"
                                              },
                                              "temperature": {
                                                "example": 22.5,
                                                "type": "number"
                                              },
                                              "timestamp": {
                                                "example": "2025-04-03T12:34:56Z",
                                                "type": "string"
                                              },
                                              "vibration": {
                                                "example": true,
                                                "type": "boolean"
                                              }
                                            },
                                            "type": "object"
                                          },
                                          "type": "array"
                                        },
                                        "id": {
                                          "example": 1,
                                          "type": "integer"
                                        },
                                        "name": {
                                          "example": "BAES 1",
                                          "type": "string"
                                        },
                                        "position": {
                                          "type": "object"
                                        }
                                      },
                                      "type": "object"
                                    },
                                    "type": "array"
                                  },
                                  "carte": {
                                    "properties": {
                                      "center_lat": {
                                        "example": 48.8566,
                                        "type": "number"
                                      },
                                      "center_lng": {
                                        "example": 2.3522,
                                        "type": "number"
                                      },
                                      "chemin": {
                                        "example": "/path/to/image.png",
                                        "type": "string"
                                      },
                                      "etage_id": {
                                        "example": 1,
                                        "type": "integer"
                                      },
                                      "id": {
                                        "example": 1,
                                        "type": "integer"
                                      },
                                      "site_id": {
                                        "example": 1,
                                        "type": "integer"
                                      },
                                      "zoom": {
                                        "example": 10,
                                        "type": "integer"
                                      }
                                    },
                                    "type": "object"
                                  },
                                  "id": {
                                    "example": 1,
                                    "type": "integer"
                                  },
                                  "name": {
                                    "example": "Etage 1",
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "type": "array"
                            },
                            "id": {
                              "example": 1,
                              "type": "integer"
                            },
                            "name": {
                              "example": "Batiment A",
                              "type": "string"
                            },
                            "polygon_points": {
                              "type": "object"
                            }
                          },
                          "type": "object"
                        },
                        "type": "array"
                      },
                      "carte": {
                        "properties": {
                          "center_lat": {
                            "example": 48.8566,
                            "type": "number"
                          },
                          "center_lng": {
                            "example": 2.3522,
                            "type": "number"
                          },
                          "chemin": {
                            "example": "/path/to/image.png",
                            "type": "string"
                          },
                          "etage_id": {
                            "example": 1,
                            "type": "integer"
                          },
                          "id": {
                            "example": 1,
                            "type": "integer"
                          },
                          "site_id": {
                            "example": 1,
                            "type": "integer"
                          },
                          "zoom": {
                            "example": 10,
                            "type": "integer"
                          }
                        },
                        "type": "object"
                      },
                      "id": {
                        "example": 1,
                        "type": "integer"
                      },
                      "name": {
                        "example": "Site par d\u00e9faut",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Utilisateur non trouv\u00e9."
          }
        },
        "summary": "Route qui retourne pour un utilisateur donn\u00e9 l'ensemble des sites auxquels il a acc\u00e8s,\nainsi que la hi\u00e9rarchie compl\u00e8te :\n  Site -> Batiment -> Etage -> BAES -> HistoriqueErreur",
        "tags": [
          "general"
        ]
      }
    },
    "/general/version": {
      "get": {
        "description": "Retourne la version actuelle de l'API.",
        "responses": {
          "200": {
            "description": "Version de l'API",
            "schema": {
              "properties": {
                "version": {
                  "example": "1.0",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        },
        "summary": "Route qui retourne la version actuelle de l'API.",
        "tags": [
          "general"
        ]
      }
    },
    "/roles/": {
      "get": {
        "description": "R\u00e9cup\u00e8re la liste de tous les r\u00f4les disponibles.",
        "responses": {
          "200": {
            "description": "Liste des r\u00f4les.",
            "schema": {
              "items": {
                "properties": {
                  "id": {
                    "example": 1,
                    "type": "integer"
                  },
                  "name": {
                    "example": "admin",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          }
        },
        "summary": "R\u00e9cup\u00e8re la liste de tous les r\u00f4les disponibles.",
        "tags": [
          "Roles"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "properties": {
                "name": {
                  "example": "admin",
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "R\u00f4le cr\u00e9\u00e9 avec succ\u00e8s.",
            "schema": {
              "properties": {
                "message": {
                  "example": "R\u00f4le cr\u00e9\u00e9",
                  "type": "string"
                },
                "role": {
                  "properties": {
                    "id": {
                      "example": 1,
                      "type": "integer"
                    },
                    "name": {
                      "example": "admin",
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Mauvaise requ\u00eate (r\u00f4le existant ou champ manquant)."
          }
        },
        "summary": "Cr\u00e9e un r\u00f4le.",
        "tags": [
          "Roles"
        ]
      }
    },
    "/roles/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "ID du r\u00f4le \u00e0 supprimer.",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "R\u00f4le supprim\u00e9 avec succ\u00e8s."
          },
          "404": {
            "description": "R\u00f4le non trouv\u00e9."
          }
        },
        "summary": "Supprime un r\u00f4le.",
        "tags": [
          "Roles"
        ]
      }
    },
    "/sites/": {
      "get": {
        "description": "R\u00e9cup\u00e8re la liste de tous les sites.",
        "responses": {
          "200": {
            "description": "Liste des sites.",
            "schema": {
              "items": {
                "properties": {
                  "id": {
                    "example": 1,
                    "type": "integer"
                  },
                  "name": {
                    "example": "Site 1",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "500": {
            "description": "Erreur interne."
          }
        },
        "tags": [
          "Site CRUD"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Cr\u00e9e un nouveau site.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "name": {
                  "example": "Site 1",
                  "type": "string"
                }
              },
              "required": [
                "name"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Site cr\u00e9\u00e9 avec succ\u00e8s.",
            "schema": {
              "properties": {
                "id": {
                  "example": 1,
                  "type": "integer"
                },
                "name": {
                  "example": "Site 1",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Mauvaise requ\u00eate."
          }
        },
        "tags": [
          "Site CRUD"
        ]
      }
    },
    "/sites/carte/get_by_floor/{floor_id}": {
      "get": {
        "description": "R\u00e9cup\u00e8re la carte associ\u00e9e \u00e0 l'\u00e9tage dont l'ID est fourni en param\u00e8tre.",
        "parameters": [
          {
            "description": "ID de l'\u00e9tage",
            "in": "path",
            "name": "floor_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Carte associ\u00e9e \u00e0 l'\u00e9tage.",
            "schema": {
              "properties": {
                "center_lat": {
                  "example": 0.3,
                  "type": "number"
                },
                "center_lng": {
                  "example": 0.4,
                  "type": "number"
                },
                "chemin": {
                  "example": "/path/to/floor_image.png",
                  "type": "string"
                },
                "etage_id": {
                  "example": 2,
                  "type": "integer"
                },
                "id": {
                  "example": 3,
                  "type": "integer"
                },
                "site_id": {
                  "example": null,
                  "type": "integer"
                },
                "zoom": {
                  "example": 1.2,
                  "type": "number"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "\u00c9tape ou carte non trouv\u00e9."
          },
          "500": {
            "description": "Erreur interne."
          }
        },
        "tags": [
          "carte crud"
        ]
      }
    },
    "/sites/carte/get_by_site/{site_id}": {
      "get": {
        "description": "R\u00e9cup\u00e8re la carte associ\u00e9e au site dont l'ID est fourni en param\u00e8tre.",
        "parameters": [
          {
            "description": "ID du site",
            "in": "path",
            "name": "site_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Carte associ\u00e9e au site.",
            "schema": {
              "properties": {
                "center_lat": {
                  "example": 0.1,
                  "type": "number"
                },
                "center_lng": {
                  "example": 0.2,
                  "type": "number"
                },
                "chemin": {
                  "example": "/path/to/image.png",
                  "type": "string"
                },
                "etage_id": {
                  "example": null,
                  "type": "integer"
                },
                "id": {
                  "example": 5,
                  "type": "integer"
                },
                "site_id": {
                  "example": 1,
                  "type": "integer"
                },
                "zoom": {
                  "example": 1.0,
                  "type": "number"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Site ou carte non trouv\u00e9."
          },
          "500": {
            "description": "Erreur interne."
          }
        },
        "tags": [
          "carte crud"
        ]
      }
    },
    "/sites/carte/update_by_site/{site_id}": {
      "put": {
        "consumes": [
          "multipart/form-data"
        ],
        "description": "Met \u00e0 jour une carte existante associ\u00e9e \u00e0 un site. Vous pouvez mettre \u00e0 jour l'image, les coordonn\u00e9es du centre et le zoom. Si vous fournissez un nouveau fichier, l'ancien sera remplac\u00e9.",
        "parameters": [
          {
            "description": "ID du site dont la carte sera mise \u00e0 jour.",
            "in": "path",
            "name": "site_id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "Nouveau fichier image de la carte (png, jpg, etc.)",
            "in": "formData",
            "name": "file",
            "required": false,
            "type": "file"
          },
          {
            "description": "Nouvelle latitude du centre de la carte",
            "in": "formData",
            "name": "center_lat",
            "required": false,
            "type": "number"
          },
          {
            "description": "Nouvelle longitude du centre de la carte",
            "in": "formData",
            "name": "center_lng",
            "required": false,
            "type": "number"
          },
          {
            "description": "Nouveau niveau de zoom de la carte",
            "in": "formData",
            "name": "zoom",
            "required": false,
            "type": "number"
          }
        ],
        "responses": {
          "200": {
            "description": "Carte mise \u00e0 jour avec succ\u00e8s.",
            "schema": {
              "properties": {
                "carte": {
                  "properties": {
                    "center_lat": {
                      "example": 48.8566,
                      "type": "number"
                    },
                    "center_lng": {
                      "example": 2.3522,
                      "type": "number"
                    },
                    "chemin": {
                      "example": "http://localhost:5000/uploads/vue_site.jpg",
                      "type": "string"
                    },
                    "etage_id": {
                      "example": null,
                      "type": "integer"
                    },
                    "id": {
                      "example": 1,
                      "type": "integer"
                    },
                    "site_id": {
                      "example": 3,
                      "type": "integer"
                    },
                    "zoom": {
                      "example": 1.0,
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "message": {
                  "example": "Carte mise \u00e0 jour avec succ\u00e8s",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Erreur de requ\u00eate ou param\u00e8tres invalides."
          },
          "404": {
            "description": "Site ou carte non trouv\u00e9."
          }
        },
        "tags": [
          "carte crud"
        ]
      }
    },
    "/sites/carte/{site_id}/assign": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Assigne une carte existante \u00e0 un site. Le JSON doit contenir 'card_id'.",
        "parameters": [
          {
            "description": "ID du site",
            "in": "path",
            "name": "site_id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "card_id": {
                  "example": 5,
                  "type": "integer"
                }
              },
              "required": [
                "card_id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Carte assign\u00e9e au site avec succ\u00e8s.",
            "schema": {
              "properties": {
                "message": {
                  "example": "Carte assign\u00e9e au site avec succ\u00e8s.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Carte d\u00e9j\u00e0 assign\u00e9e ou champ manquant."
          },
          "404": {
            "description": "Site ou carte non trouv\u00e9."
          },
          "500": {
            "description": "Erreur interne."
          }
        },
        "tags": [
          "assignation carte"
        ]
      }
    },
    "/sites/{site_id}": {
      "delete": {
        "description": "Supprime un site par son ID et tous les \u00e9l\u00e9ments associ\u00e9s (b\u00e2timents, \u00e9tages, BAES, erreurs, cartes) en cascade. Les liaisons user-site-role sont conserv\u00e9es avec site_id=NULL pour maintenir les relations user-role.",
        "parameters": [
          {
            "description": "ID du site \u00e0 supprimer",
            "in": "path",
            "name": "site_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Site supprim\u00e9 avec succ\u00e8s.",
            "schema": {
              "properties": {
                "baes_deleted": {
                  "example": 10,
                  "type": "integer"
                },
                "batiments_deleted": {
                  "example": 2,
                  "type": "integer"
                },
                "cartes_deleted": {
                  "example": 3,
                  "type": "integer"
                },
                "erreurs_deleted": {
                  "example": 15,
                  "type": "integer"
                },
                "etages_deleted": {
                  "example": 5,
                  "type": "integer"
                },
                "message": {
                  "example": "Site supprim\u00e9 avec succ\u00e8s",
                  "type": "string"
                },
                "user_site_roles_preserved": {
                  "example": 4,
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Site non trouv\u00e9."
          }
        },
        "tags": [
          "Site CRUD"
        ]
      },
      "get": {
        "description": "R\u00e9cup\u00e8re un site par son ID.",
        "parameters": [
          {
            "description": "ID du site \u00e0 r\u00e9cup\u00e9rer",
            "in": "path",
            "name": "site_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "D\u00e9tails du site.",
            "schema": {
              "properties": {
                "id": {
                  "example": 1,
                  "type": "integer"
                },
                "name": {
                  "example": "Site 1",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Site non trouv\u00e9."
          }
        },
        "tags": [
          "Site CRUD"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Met \u00e0 jour un site existant.",
        "parameters": [
          {
            "description": "ID du site \u00e0 mettre \u00e0 jour",
            "in": "path",
            "name": "site_id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "name": {
                  "example": "Site mis \u00e0 jour",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Site mis \u00e0 jour avec succ\u00e8s.",
            "schema": {
              "properties": {
                "id": {
                  "example": 1,
                  "type": "integer"
                },
                "name": {
                  "example": "Site mis \u00e0 jour",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Site non trouv\u00e9."
          }
        },
        "tags": [
          "Site CRUD"
        ]
      }
    },
    "/sites/{site_id}/": {
      "delete": {
        "description": "Supprime un site par son ID et tous les \u00e9l\u00e9ments associ\u00e9s (b\u00e2timents, \u00e9tages, BAES, erreurs, cartes) en cascade. Les liaisons user-site-role sont conserv\u00e9es avec site_id=NULL pour maintenir les relations user-role.",
        "parameters": [
          {
            "description": "ID du site \u00e0 supprimer",
            "in": "path",
            "name": "site_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Site supprim\u00e9 avec succ\u00e8s.",
            "schema": {
              "properties": {
                "baes_deleted": {
                  "example": 10,
                  "type": "integer"
                },
                "batiments_deleted": {
                  "example": 2,
                  "type": "integer"
                },
                "cartes_deleted": {
                  "example": 3,
                  "type": "integer"
                },
                "erreurs_deleted": {
                  "example": 15,
                  "type": "integer"
                },
                "etages_deleted": {
                  "example": 5,
                  "type": "integer"
                },
                "message": {
                  "example": "Site supprim\u00e9 avec succ\u00e8s",
                  "type": "string"
                },
                "user_site_roles_preserved": {
                  "example": 4,
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Site non trouv\u00e9."
          }
        },
        "tags": [
          "Site CRUD"
        ]
      },
      "get": {
        "description": "R\u00e9cup\u00e8re un site par son ID.",
        "parameters": [
          {
            "description": "ID du site \u00e0 r\u00e9cup\u00e9rer",
            "in": "path",
            "name": "site_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "D\u00e9tails du site.",
            "schema": {
              "properties": {
                "id": {
                  "example": 1,
                  "type": "integer"
                },
                "name": {
                  "example": "Site 1",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Site non trouv\u00e9."
          }
        },
        "tags": [
          "Site CRUD"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Met \u00e0 jour un site existant.",
        "parameters": [
          {
            "description": "ID du site \u00e0 mettre \u00e0 jour",
            "in": "path",
            "name": "site_id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "name": {
                  "example": "Site mis \u00e0 jour",
                  "type": "string"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Site mis \u00e0 jour avec succ\u00e8s.",
            "schema": {
              "properties": {
                "id": {
                  "example": 1,
                  "type": "integer"
                },
                "name": {
                  "example": "Site mis \u00e0 jour",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Site non trouv\u00e9."
          }
        },
        "tags": [
          "Site CRUD"
        ]
      }
    },
    "/status/": {
      "get": {
        "description": "R\u00e9cup\u00e8re la liste de toutes les erreurs.",
        "responses": {
          "200": {
            "description": "Liste des erreurs.",
            "schema": {
              "items": {
                "properties": {
                  "baes_id": {
                    "example": 1,
                    "format": "int64",
                    "type": "integer"
                  },
                  "erreur": {
                    "example": 1,
                    "type": "integer"
                  },
                  "id": {
                    "example": 1,
                    "type": "integer"
                  },
                  "is_ignored": {
                    "example": false,
                    "type": "boolean"
                  },
                  "is_solved": {
                    "example": false,
                    "type": "boolean"
                  },
                  "temperature": {
                    "example": 25.5,
                    "format": "float",
                    "nullable": true,
                    "type": "number"
                  },
                  "timestamp": {
                    "example": "2023-01-01T12:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  },
                  "updated_at": {
                    "example": "2023-01-01T12:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  },
                  "vibration": {
                    "example": true,
                    "nullable": true,
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "500": {
            "description": "Erreur interne."
          }
        },
        "tags": [
          "Status CRUD"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Cr\u00e9e une nouvelle entr\u00e9e d'erreur.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "baes_id": {
                  "example": 1,
                  "format": "int64",
                  "type": "integer"
                },
                "erreur": {
                  "description": "Type d'erreur d\u00e9crit dans le front (1 pour erreur_connexion, 2 pour erreur_batterie)",
                  "example": 1,
                  "type ": "integer "
                },
                "is_ignored": {
                  "example": false,
                  "type": "boolean"
                },
                "is_solved": {
                  "example": false,
                  "type": "boolean"
                },
                "label": {
                  "description": "\u00c9tiquette du BAES (utilis\u00e9 si le BAES n'existe pas)",
                  "example": "\u00c9tiquette BAES",
                  "nullable": true,
                  "type": "string"
                },
                "name": {
                  "description": "Nom du BAES (utilis\u00e9 si le BAES n'existe pas)",
                  "example": "BAES-1",
                  "nullable": true,
                  "type": "string"
                },
                "temperature": {
                  "description": "Temp\u00e9rature du BAES (utilis\u00e9 si le BAES n'existe pas)",
                  "example": 25.5,
                  "format": "float",
                  "nullable": true,
                  "type": "number"
                },
                "vibration": {
                  "description": "\u00c9tat de vibration du BAES (utilis\u00e9 si le BAES n'existe pas)",
                  "example": true,
                  "nullable": true,
                  "type": "boolean"
                }
              },
              "required": [
                "baes_id",
                "erreur"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Erreur cr\u00e9\u00e9e avec succ\u00e8s.",
            "schema": {
              "properties": {
                "baes": {
                  "properties": {
                    "id": {
                      "example": 1,
                      "format": "int64",
                      "type": "integer"
                    },
                    "label": {
                      "example": "\u00c9tiquette BAES",
                      "nullable": true,
                      "type": "string"
                    },
                    "name": {
                      "example": "BAES-1",
                      "nullable": true,
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "baes_id": {
                  "example": 1,
                  "format": "int64",
                  "type": "integer"
                },
                "erreur": {
                  "example": 1,
                  "type": "integer"
                },
                "id": {
                  "example": 1,
                  "type": "integer"
                },
                "is_ignored": {
                  "example": false,
                  "type": "boolean"
                },
                "is_solved": {
                  "example": false,
                  "type": "boolean"
                },
                "temperature": {
                  "example": 25.5,
                  "format": "float",
                  "nullable": true,
                  "type": "number"
                },
                "timestamp": {
                  "example": "2023-01-01T12:00:00Z",
                  "format": "date-time",
                  "type": "string"
                },
                "vibration": {
                  "example": true,
                  "nullable": true,
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Mauvaise requ\u00eate."
          },
          "404": {
            "description": "BAES non trouv\u00e9."
          }
        },
        "tags": [
          "Status CRUD"
        ]
      }
    },
    "/status/acknowledged": {
      "get": {
        "description": "R\u00e9cup\u00e8re la liste des erreurs acquitt\u00e9es avec les informations sur qui les a acquitt\u00e9es.",
        "responses": {
          "200": {
            "description": "Liste des erreurs acquitt\u00e9es.",
            "schema": {
              "items": {
                "properties": {
                  "acknowledged_at": {
                    "example": "2023-01-02T14:30:00Z",
                    "format": "date-time",
                    "type": "string"
                  },
                  "acknowledged_by_login": {
                    "example": "user1",
                    "type": "string"
                  },
                  "acknowledged_by_user_id": {
                    "example": 1,
                    "type": "integer"
                  },
                  "baes_id": {
                    "example": 1,
                    "format": "int64",
                    "type": "integer"
                  },
                  "erreur": {
                    "example": 1,
                    "type": "integer"
                  },
                  "id": {
                    "example": 1,
                    "type": "integer"
                  },
                  "is_ignored": {
                    "example": false,
                    "type": "boolean"
                  },
                  "is_solved": {
                    "example": true,
                    "type": "boolean"
                  },
                  "temperature": {
                    "example": 25.5,
                    "format": "float",
                    "nullable": true,
                    "type": "number"
                  },
                  "timestamp": {
                    "example": "2023-01-01T12:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  },
                  "updated_at": {
                    "example": "2023-01-01T12:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  },
                  "vibration": {
                    "example": true,
                    "nullable": true,
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "500": {
            "description": "Erreur interne."
          }
        },
        "tags": [
          "Status CRUD"
        ]
      }
    },
    "/status/after/{updated_at}": {
      "get": {
        "description": "R\u00e9cup\u00e8re toutes les erreurs modifi\u00e9es \u00e0 ou apr\u00e8s le timestamp sp\u00e9cifi\u00e9 (\u00e0 la seconde pr\u00e8s).",
        "parameters": [
          {
            "description": "Timestamp ISO 8601 (ex: 2023-01-01T12:00:00Z) \u00e0 partir duquel r\u00e9cup\u00e9rer les erreurs modifi\u00e9es",
            "format": "date-time",
            "in": "path",
            "name": "updated_at",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des erreurs modifi\u00e9es \u00e0 ou apr\u00e8s le timestamp sp\u00e9cifi\u00e9.",
            "schema": {
              "items": {
                "properties": {
                  "acknowledged_at": {
                    "example": "2023-01-02T14:30:00Z",
                    "format": "date-time",
                    "nullable": true,
                    "type": "string"
                  },
                  "acknowledged_by_login": {
                    "example": "user1",
                    "nullable": true,
                    "type": "string"
                  },
                  "acknowledged_by_user_id": {
                    "example": 1,
                    "nullable": true,
                    "type": "integer"
                  },
                  "baes_id": {
                    "example": 1,
                    "format": "int64",
                    "type": "integer"
                  },
                  "erreur": {
                    "example": 1,
                    "type": "integer"
                  },
                  "id": {
                    "example": 13,
                    "type": "integer"
                  },
                  "is_ignored": {
                    "example": false,
                    "type": "boolean"
                  },
                  "is_solved": {
                    "example": false,
                    "type": "boolean"
                  },
                  "temperature": {
                    "example": 25.5,
                    "format": "float",
                    "nullable": true,
                    "type": "number"
                  },
                  "timestamp": {
                    "example": "2023-01-01T12:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  },
                  "updated_at": {
                    "example": "2023-01-01T12:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  },
                  "vibration": {
                    "example": true,
                    "nullable": true,
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "400": {
            "description": "Format de timestamp invalide."
          },
          "500": {
            "description": "Erreur interne."
          }
        },
        "tags": [
          "Status CRUD"
        ]
      }
    },
    "/status/baes/{baes_id}": {
      "get": {
        "description": "R\u00e9cup\u00e8re toutes les erreurs pour un BAES sp\u00e9cifique.",
        "parameters": [
          {
            "description": "ID du BAES dont on veut r\u00e9cup\u00e9rer les erreurs",
            "format": "int64",
            "in": "path",
            "name": "baes_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des erreurs pour le BAES sp\u00e9cifi\u00e9.",
            "schema": {
              "items": {
                "properties": {
                  "acknowledged_at": {
                    "example": "2023-01-02T14:30:00Z",
                    "format": "date-time",
                    "nullable": true,
                    "type": "string"
                  },
                  "acknowledged_by_login": {
                    "example": "user1",
                    "nullable": true,
                    "type": "string"
                  },
                  "acknowledged_by_user_id": {
                    "example": 1,
                    "nullable": true,
                    "type": "integer"
                  },
                  "baes_id": {
                    "example": 1,
                    "format": "int64",
                    "type": "integer"
                  },
                  "erreur": {
                    "example": 1,
                    "type": "integer"
                  },
                  "id": {
                    "example": 1,
                    "type": "integer"
                  },
                  "is_ignored": {
                    "example": false,
                    "type": "boolean"
                  },
                  "is_solved": {
                    "example": false,
                    "type": "boolean"
                  },
                  "temperature": {
                    "example": 25.5,
                    "format": "float",
                    "nullable": true,
                    "type": "number"
                  },
                  "timestamp": {
                    "example": "2023-01-01T12:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  },
                  "updated_at": {
                    "example": "2023-01-01T12:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  },
                  "vibration": {
                    "example": true,
                    "nullable": true,
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "404": {
            "description": "BAES non trouv\u00e9."
          }
        },
        "tags": [
          "Status CRUD"
        ]
      }
    },
    "/status/baes/{baes_id}/type/{_erreur}": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Modifie les d\u00e9tails d'une erreur identifi\u00e9e par le BAES et le type d'erreur.",
        "parameters": [
          {
            "description": "ID du BAES associ\u00e9 \u00e0 l'erreur",
            "format": "int64",
            "in": "path",
            "name": "baes_id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "int 64 du type d'erreur (1 pour erreur_connexion, 2 pour erreur_batterie, etc.)",
            "format": "int64",
            "in": "path",
            "name": "erreur",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "is_ignored": {
                  "example": false,
                  "type": "boolean"
                },
                "is_solved": {
                  "example": false,
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Erreur modifi\u00e9e avec succ\u00e8s.",
            "schema": {
              "properties": {
                "acknowledged_at": {
                  "example": "2023-01-02T14:30:00Z",
                  "format": "date-time",
                  "nullable": true,
                  "type": "string"
                },
                "acknowledged_by_login": {
                  "example": "user1",
                  "nullable": true,
                  "type": "string"
                },
                "acknowledged_by_user_id": {
                  "example": 1,
                  "nullable": true,
                  "type": "integer"
                },
                "baes_id": {
                  "example": 1,
                  "format": "int64",
                  "type": "integer"
                },
                "erreur": {
                  "example": 1,
                  "type": "integer"
                },
                "id": {
                  "example": 1,
                  "type": "integer"
                },
                "is_ignored": {
                  "example": false,
                  "type": "boolean"
                },
                "is_solved": {
                  "example": false,
                  "type": "boolean"
                },
                "timestamp": {
                  "example": "2023-01-01T12:00:00Z",
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Mauvaise requ\u00eate."
          },
          "404": {
            "description": "Erreur non trouv\u00e9e ou BAES non trouv\u00e9."
          }
        },
        "tags": [
          "Status CRUD"
        ]
      }
    },
    "/status/etage/{etage_id}": {
      "get": {
        "description": "R\u00e9cup\u00e8re toutes les erreurs de tous les BAES pr\u00e9sents dans un \u00e9tage sp\u00e9cifique.",
        "parameters": [
          {
            "description": "ID de l'\u00e9tage dont on veut r\u00e9cup\u00e9rer les erreurs de tous les BAES",
            "in": "path",
            "name": "etage_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des erreurs pour tous les BAES de l'\u00e9tage sp\u00e9cifi\u00e9.",
            "schema": {
              "items": {
                "properties": {
                  "acknowledged_at": {
                    "example": "2023-01-02T14:30:00Z",
                    "format": "date-time",
                    "nullable": true,
                    "type": "string"
                  },
                  "acknowledged_by_login": {
                    "example": "user1",
                    "nullable": true,
                    "type": "string"
                  },
                  "acknowledged_by_user_id": {
                    "example": 1,
                    "nullable": true,
                    "type": "integer"
                  },
                  "baes_id": {
                    "example": 1,
                    "format": "int64",
                    "type": "integer"
                  },
                  "baes_name": {
                    "example": "BAES-001",
                    "type": "string"
                  },
                  "erreur": {
                    "example": 1,
                    "type": "integer"
                  },
                  "id": {
                    "example": 1,
                    "type": "integer"
                  },
                  "is_ignored": {
                    "example": false,
                    "type": "boolean"
                  },
                  "is_solved": {
                    "example": false,
                    "type": "boolean"
                  },
                  "temperature": {
                    "example": 25.5,
                    "format": "float",
                    "nullable": true,
                    "type": "number"
                  },
                  "timestamp": {
                    "example": "2023-01-01T12:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  },
                  "updated_at": {
                    "example": "2023-01-01T12:00:00Z",
                    "format": "date-time",
                    "type": "string"
                  },
                  "vibration": {
                    "example": true,
                    "nullable": true,
                    "type": "boolean"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "404": {
            "description": "\u00c9tage non trouv\u00e9."
          },
          "500": {
            "description": "Erreur interne."
          }
        },
        "tags": [
          "Status CRUD"
        ]
      }
    },
    "/status/latest": {
      "get": {
        "description": "R\u00e9cup\u00e8re l'erreur la plus r\u00e9cemment modifi\u00e9e ou cr\u00e9\u00e9e.",
        "responses": {
          "200": {
            "description": "D\u00e9tails de l'erreur la plus r\u00e9cente.",
            "schema": {
              "properties": {
                "acknowledged_at": {
                  "example": "2023-01-02T14:30:00Z",
                  "format": "date-time",
                  "nullable": true,
                  "type": "string"
                },
                "acknowledged_by_login": {
                  "example": "user1",
                  "nullable": true,
                  "type": "string"
                },
                "acknowledged_by_user_id": {
                  "example": 1,
                  "nullable": true,
                  "type": "integer"
                },
                "baes_id": {
                  "example": 1,
                  "format": "int64",
                  "type": "integer"
                },
                "erreur": {
                  "example": 1,
                  "type": "integer"
                },
                "id": {
                  "example": 1,
                  "type": "integer"
                },
                "is_ignored": {
                  "example": false,
                  "type": "boolean"
                },
                "is_solved": {
                  "example": false,
                  "type": "boolean"
                },
                "temperature": {
                  "example": 25.5,
                  "format": "float",
                  "nullable": true,
                  "type": "number"
                },
                "timestamp": {
                  "example": "2023-01-01T12:00:00Z",
                  "format": "date-time",
                  "type": "string"
                },
                "updated_at": {
                  "example": "2023-01-01T12:00:00Z",
                  "format": "date-time",
                  "type": "string"
                },
                "vibration": {
                  "example": true,
                  "nullable": true,
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Aucune erreur trouv\u00e9e."
          }
        },
        "tags": [
          "Status CRUD"
        ]
      }
    },
    "/status/user/{user_id}": {
      "get": {
        "description": "R\u00e9cup\u00e8re le dernier message de status pour chaque BAES visible par un utilisateur et chaque BAES non attribu\u00e9 \u00e0 un \u00e9tage.",
        "parameters": [
          {
            "description": "ID de l'utilisateur",
            "in": "path",
            "name": "user_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des BAES avec leur dernier status.",
            "schema": {
              "items": {
                "properties": {
                  "etage_id": {
                    "example": 1,
                    "nullable": true,
                    "type": "integer"
                  },
                  "id": {
                    "example": 1,
                    "format": "int64",
                    "type": "integer"
                  },
                  "label": {
                    "example": "\u00c9tiquette BAES 1",
                    "type": "string"
                  },
                  "latest_status": {
                    "nullable": true,
                    "properties": {
                      "erreur": {
                        "example": 1,
                        "type": "integer"
                      },
                      "id": {
                        "example": 1,
                        "type": "integer"
                      },
                      "is_ignored": {
                        "example": false,
                        "type": "boolean"
                      },
                      "is_solved": {
                        "example": false,
                        "type": "boolean"
                      },
                      "temperature": {
                        "example": 25.5,
                        "format": "float",
                        "nullable": true,
                        "type": "number"
                      },
                      "timestamp": {
                        "example": "2023-01-01T12:00:00Z",
                        "format": "date-time",
                        "type": "string"
                      },
                      "vibration": {
                        "example": true,
                        "nullable": true,
                        "type": "boolean"
                      }
                    },
                    "type": "object"
                  },
                  "name": {
                    "example": "BAES 1",
                    "type": "string"
                  },
                  "position": {
                    "example": {
                      "x": 100,
                      "y": 200
                    },
                    "type": "object"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "404": {
            "description": "Utilisateur non trouv\u00e9."
          },
          "500": {
            "description": "Erreur interne."
          }
        },
        "summary": "R\u00e9cup\u00e8re le dernier message de status pour chaque BAES visible par un utilisateur et chaque BAES non attribu\u00e9 \u00e0 un \u00e9tage.",
        "tags": [
          "Status CRUD"
        ]
      }
    },
    "/status/{status_id}": {
      "delete": {
        "description": "Supprime une erreur par son ID.",
        "parameters": [
          {
            "description": "ID de l'erreur \u00e0 supprimer",
            "in": "path",
            "name": "status_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Erreur supprim\u00e9e avec succ\u00e8s.",
            "schema": {
              "properties": {
                "message": {
                  "example": "Erreur supprim\u00e9e avec succ\u00e8s",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Erreur non trouv\u00e9e."
          }
        },
        "tags": [
          "Status CRUD"
        ]
      },
      "get": {
        "description": "R\u00e9cup\u00e8re une erreur par son ID.",
        "parameters": [
          {
            "description": "ID de l'erreur \u00e0 r\u00e9cup\u00e9rer",
            "in": "path",
            "name": "status_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "D\u00e9tails de l'erreur.",
            "schema": {
              "properties": {
                "baes_id": {
                  "example": 1,
                  "format": "int64",
                  "type": "integer"
                },
                "erreur": {
                  "example": 1,
                  "type": "integer"
                },
                "id": {
                  "example": 1,
                  "type": "integer"
                },
                "is_ignored": {
                  "example": false,
                  "type": "boolean"
                },
                "is_solved": {
                  "example": false,
                  "type": "boolean"
                },
                "temperature": {
                  "example": 25.5,
                  "format": "float",
                  "nullable": true,
                  "type": "number"
                },
                "timestamp": {
                  "example": "2023-01-01T12:00:00Z",
                  "format": "date-time",
                  "type": "string"
                },
                "updated_at": {
                  "example": "2023-01-01T12:00:00Z",
                  "format": "date-time",
                  "type": "string"
                },
                "vibration": {
                  "example": true,
                  "nullable": true,
                  "type": "boolean"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Erreur non trouv\u00e9e."
          }
        },
        "tags": [
          "Status CRUD"
        ]
      }
    },
    "/status/{status_id}/status": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Met \u00e0 jour le statut d'une erreur (r\u00e9solu/ignor\u00e9) et enregistre l'utilisateur qui a fait l'acquittement.",
        "parameters": [
          {
            "description": "ID de l'erreur \u00e0 mettre \u00e0 jour",
            "in": "path",
            "name": "status_id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "is_ignored": {
                  "example": false,
                  "type": "boolean"
                },
                "is_solved": {
                  "example": true,
                  "type": "boolean"
                },
                "user_id": {
                  "description": "ID de l'utilisateur qui acquitte l'erreur (optionnel)",
                  "example": 1,
                  "type": "integer"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Statut de l'erreur mis \u00e0 jour avec succ\u00e8s.",
            "schema": {
              "properties": {
                "acknowledged_at": {
                  "example": "2023-01-02T14:30:00Z",
                  "format": "date-time",
                  "type": "string"
                },
                "acknowledged_by_login": {
                  "example": "user1",
                  "type": "string"
                },
                "acknowledged_by_user_id": {
                  "example": 1,
                  "type": "integer"
                },
                "baes_id": {
                  "example": 1,
                  "format": "int64",
                  "type": "integer"
                },
                "erreur": {
                  "example": 1,
                  "type": "integer"
                },
                "id": {
                  "example": 1,
                  "type": "integer"
                },
                "is_ignored": {
                  "example": false,
                  "type": "boolean"
                },
                "is_solved": {
                  "example": true,
                  "type": "boolean"
                },
                "timestamp": {
                  "example": "2023-01-01T12:00:00Z",
                  "format": "date-time",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Mauvaise requ\u00eate."
          },
          "404": {
            "description": "Erreur non trouv\u00e9e."
          }
        },
        "tags": [
          "Status CRUD"
        ]
      }
    },
    "/user_site_role": {
      "get": {
        "description": "R\u00e9cup\u00e8re toutes les relations avec possibilit\u00e9 de filtrer par user_id, site_id ou role_id",
        "parameters": [
          {
            "description": "Filtrer par ID utilisateur",
            "in": "query",
            "name": "user_id",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filtrer par ID site",
            "in": "query",
            "name": "site_id",
            "required": false,
            "type": "integer"
          },
          {
            "description": "Filtrer par ID r\u00f4le",
            "in": "query",
            "name": "role_id",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des relations user-site-role",
            "schema": {
              "items": {
                "$ref": "#/definitions/UserSiteRole"
              },
              "type": "array"
            }
          },
          "500": {
            "description": "Erreur serveur"
          }
        },
        "summary": "R\u00e9cup\u00e8re toutes les relations user-site-role avec possibilit\u00e9 de filtrer",
        "tags": [
          "UserSiteRole"
        ]
      },
      "post": {
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "role_id": {
                  "description": "ID du r\u00f4le",
                  "type": "integer"
                },
                "site_id": {
                  "description": "ID du site (null pour r\u00f4le global)",
                  "nullable": true,
                  "type": "integer"
                },
                "user_id": {
                  "description": "ID de l'utilisateur",
                  "type": "integer"
                }
              },
              "required": [
                "user_id",
                "role_id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Relation cr\u00e9\u00e9e avec succ\u00e8s",
            "schema": {
              "$ref": "#/definitions/UserSiteRole"
            }
          },
          "400": {
            "description": "Donn\u00e9es invalides"
          },
          "404": {
            "description": "Ressource non trouv\u00e9e"
          },
          "409": {
            "description": "La relation existe d\u00e9j\u00e0"
          }
        },
        "summary": "Cr\u00e9e une nouvelle relation user-site-role",
        "tags": [
          "UserSiteRole"
        ]
      }
    },
    "/user_site_role/site/{site_id}/users": {
      "get": {
        "parameters": [
          {
            "description": "ID du site",
            "in": "path",
            "name": "site_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Utilisateurs du site",
            "schema": {
              "properties": {
                "site_id": {
                  "type": "integer"
                },
                "site_name": {
                  "type": "string"
                },
                "users": {
                  "items": {
                    "properties": {
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "role_id": {
                        "type": "integer"
                      },
                      "role_name": {
                        "type": "string"
                      },
                      "user_id": {
                        "type": "integer"
                      },
                      "user_login": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Site non trouv\u00e9"
          }
        },
        "summary": "R\u00e9cup\u00e8re tous les utilisateurs ayant acc\u00e8s \u00e0 un site",
        "tags": [
          "UserSiteRole"
        ]
      }
    },
    "/user_site_role/user/{user_id}/global-role": {
      "post": {
        "description": "Attribue un r\u00f4le global (site=null) \u00e0 un utilisateur. Utile quand un utilisateur n'a plus de site sp\u00e9cifique",
        "parameters": [
          {
            "description": "ID de l'utilisateur",
            "in": "path",
            "name": "user_id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "role_id": {
                  "description": "ID du r\u00f4le global \u00e0 attribuer",
                  "type": "integer"
                }
              },
              "required": [
                "role_id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "R\u00f4le global attribu\u00e9",
            "schema": {
              "$ref": "#/definitions/UserSiteRole"
            }
          },
          "400": {
            "description": "Donn\u00e9es invalides"
          },
          "404": {
            "description": "Ressource non trouv\u00e9e"
          },
          "409": {
            "description": "Ce r\u00f4le global est d\u00e9j\u00e0 attribu\u00e9"
          }
        },
        "summary": "Attribue un r\u00f4le global (site=null) \u00e0 un utilisateur",
        "tags": [
          "UserSiteRole"
        ]
      }
    },
    "/user_site_role/user/{user_id}/permissions": {
      "get": {
        "parameters": [
          {
            "description": "ID de l'utilisateur",
            "in": "path",
            "name": "user_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Permissions de l'utilisateur",
            "schema": {
              "properties": {
                "permissions": {
                  "items": {
                    "properties": {
                      "created_at": {
                        "format": "date-time",
                        "type": "string"
                      },
                      "id": {
                        "type": "integer"
                      },
                      "role_id": {
                        "type": "integer"
                      },
                      "role_name": {
                        "type": "string"
                      },
                      "site_id": {
                        "nullable": true,
                        "type": "integer"
                      },
                      "site_name": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                },
                "user_id": {
                  "type": "integer"
                },
                "user_login": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Utilisateur non trouv\u00e9"
          }
        },
        "summary": "R\u00e9cup\u00e8re tous les sites et r\u00f4les associ\u00e9s \u00e0 un utilisateur",
        "tags": [
          "UserSiteRole"
        ]
      }
    },
    "/user_site_role/user/{user_id}/site/{site_id}": {
      "delete": {
        "parameters": [
          {
            "description": "ID de l'utilisateur",
            "in": "path",
            "name": "user_id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "ID du site",
            "in": "path",
            "name": "site_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Permissions supprim\u00e9es",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                },
                "remaining_permissions": {
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Ressource non trouv\u00e9e"
          }
        },
        "summary": "Supprime toutes les permissions d'un utilisateur pour un site donn\u00e9",
        "tags": [
          "UserSiteRole"
        ]
      }
    },
    "/user_site_role/{id}": {
      "delete": {
        "parameters": [
          {
            "description": "ID de la relation \u00e0 supprimer",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Relation supprim\u00e9e avec succ\u00e8s",
            "schema": {
              "properties": {
                "message": {
                  "type": "string"
                },
                "remaining_permissions": {
                  "type": "integer"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Relation non trouv\u00e9e"
          }
        },
        "summary": "Supprime une relation user-site-role",
        "tags": [
          "UserSiteRole"
        ]
      },
      "get": {
        "parameters": [
          {
            "description": "ID de la relation",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Relation trouv\u00e9e",
            "schema": {
              "$ref": "#/definitions/UserSiteRole"
            }
          },
          "404": {
            "description": "Relation non trouv\u00e9e"
          }
        },
        "summary": "R\u00e9cup\u00e8re une relation user-site-role sp\u00e9cifique",
        "tags": [
          "UserSiteRole"
        ]
      },
      "patch": {
        "parameters": [
          {
            "description": "ID de la relation \u00e0 modifier",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "role_id": {
                  "description": "ID du r\u00f4le",
                  "type": "integer"
                },
                "site_id": {
                  "description": "ID du site",
                  "nullable": true,
                  "type": "integer"
                },
                "user_id": {
                  "description": "ID de l'utilisateur",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Relation modifi\u00e9e avec succ\u00e8s",
            "schema": {
              "$ref": "#/definitions/UserSiteRole"
            }
          },
          "400": {
            "description": "Donn\u00e9es invalides"
          },
          "404": {
            "description": "Relation non trouv\u00e9e"
          },
          "409": {
            "description": "La relation existe d\u00e9j\u00e0"
          }
        },
        "summary": "Modifie une relation user-site-role existante",
        "tags": [
          "UserSiteRole"
        ]
      },
      "put": {
        "parameters": [
          {
            "description": "ID de la relation \u00e0 modifier",
            "in": "path",
            "name": "id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "role_id": {
                  "description": "ID du r\u00f4le",
                  "type": "integer"
                },
                "site_id": {
                  "description": "ID du site",
                  "nullable": true,
                  "type": "integer"
                },
                "user_id": {
                  "description": "ID de l'utilisateur",
                  "type": "integer"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Relation modifi\u00e9e avec succ\u00e8s",
            "schema": {
              "$ref": "#/definitions/UserSiteRole"
            }
          },
          "400": {
            "description": "Donn\u00e9es invalides"
          },
          "404": {
            "description": "Relation non trouv\u00e9e"
          },
          "409": {
            "description": "La relation existe d\u00e9j\u00e0"
          }
        },
        "summary": "Modifie une relation user-site-role existante",
        "tags": [
          "UserSiteRole"
        ]
      }
    },
    "/users/": {
      "get": {
        "description": "R\u00e9cup\u00e8re la liste de tous les utilisateurs avec leurs sites et r\u00f4les associ\u00e9s.",
        "responses": {
          "200": {
            "description": "Liste des utilisateurs avec leurs sites et r\u00f4les.",
            "schema": {
              "items": {
                "properties": {
                  "id": {
                    "example": 1,
                    "type": "integer"
                  },
                  "login": {
                    "example": "user1",
                    "type": "string"
                  },
                  "roles": {
                    "example": [
                      "admin",
                      "user"
                    ],
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "sites": {
                    "example": [
                      {
                        "id": 3,
                        "name": "Site test 1"
                      },
                      {
                        "id": 4,
                        "name": "Site test 2"
                      }
                    ],
                    "items": {
                      "properties": {
                        "id": {
                          "example": 3,
                          "type": "integer"
                        },
                        "name": {
                          "example": "Site test 1",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "type": "array"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "500": {
            "description": "Erreur interne."
          }
        },
        "tags": [
          "User CRUD"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Cr\u00e9e un nouvel utilisateur et associe \u00e9ventuellement des r\u00f4les et sites via l'association.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "login": {
                  "example": "nouveluser",
                  "type": "string"
                },
                "password": {
                  "example": "motdepasse",
                  "type": "string"
                },
                "roles": {
                  "example": [
                    "admin",
                    "user"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "sites": {
                  "example": [
                    3,
                    4
                  ],
                  "items": {
                    "type": "integer"
                  },
                  "type": "array"
                }
              },
              "required": [
                "login",
                "password"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Utilisateur cr\u00e9\u00e9 avec succ\u00e8s.",
            "schema": {
              "properties": {
                "id": {
                  "example": 1,
                  "type": "integer"
                },
                "login": {
                  "example": "nouveluser",
                  "type": "string"
                },
                "roles": {
                  "example": [
                    "admin",
                    "user"
                  ],
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "sites": {
                  "items": {
                    "properties": {
                      "id": {
                        "example": 3,
                        "type": "integer"
                      },
                      "name": {
                        "example": "Site test 1",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Mauvaise requ\u00eate."
          }
        },
        "tags": [
          "User CRUD"
        ]
      }
    },
    "/users/create-with-relations": {
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Cr\u00e9e un nouvel utilisateur avec toutes ses relations site-r\u00f4le en une seule requ\u00eate.",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "login": {
                  "example": "nouveluser",
                  "type": "string"
                },
                "password": {
                  "example": "motdepasse",
                  "type": "string"
                },
                "rolesBySite": {
                  "description": "Objet o\u00f9 les cl\u00e9s sont les IDs des sites et les valeurs sont les IDs des r\u00f4les",
                  "example": {
                    "1": 2,
                    "3": 1
                  },
                  "type": "object"
                }
              },
              "required": [
                "login",
                "password",
                "rolesBySite"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Utilisateur cr\u00e9\u00e9 avec succ\u00e8s avec toutes ses relations.",
            "schema": {
              "properties": {
                "id": {
                  "example": 1,
                  "type": "integer"
                },
                "login": {
                  "example": "nouveluser",
                  "type": "string"
                },
                "relations": {
                  "items": {
                    "properties": {
                      "role_id": {
                        "example": 2,
                        "type": "integer"
                      },
                      "role_name": {
                        "example": "editor",
                        "type": "string"
                      },
                      "site_id": {
                        "example": 1,
                        "type": "integer"
                      },
                      "site_name": {
                        "example": "Site A",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Mauvaise requ\u00eate ou utilisateur existant."
          },
          "404": {
            "description": "Site ou r\u00f4le non trouv\u00e9."
          },
          "500": {
            "description": "Erreur interne."
          }
        },
        "tags": [
          "User CRUD"
        ]
      }
    },
    "/users/sites/{user_id}/sites": {
      "get": {
        "description": "R\u00e9cup\u00e8re la liste des sites associ\u00e9s \u00e0 un utilisateur donn\u00e9.",
        "parameters": [
          {
            "description": "ID de l'utilisateur",
            "in": "path",
            "name": "user_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Liste des sites pour l'utilisateur.",
            "schema": {
              "items": {
                "properties": {
                  "id": {
                    "example": 1,
                    "type": "integer"
                  },
                  "name": {
                    "example": "Site 1",
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "type": "array"
            }
          },
          "404": {
            "description": "Utilisateur non trouv\u00e9."
          },
          "500": {
            "description": "Erreur interne."
          }
        },
        "tags": [
          "User-Site Relations"
        ]
      },
      "post": {
        "consumes": [
          "application/json"
        ],
        "description": "Associe un site \u00e0 un utilisateur ou met \u00e0 jour une association existante. Attendez un JSON contenant 'site_id'.",
        "parameters": [
          {
            "description": "ID de l'utilisateur",
            "in": "path",
            "name": "user_id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "site_id": {
                  "example": 1,
                  "type": "integer"
                }
              },
              "required": [
                "site_id"
              ],
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Site associ\u00e9 avec succ\u00e8s \u00e0 l'utilisateur ou association mise \u00e0 jour.",
            "schema": {
              "properties": {
                "message": {
                  "example": "Site ajout\u00e9 \u00e0 l'utilisateur ou association mise \u00e0 jour.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Utilisateur ou site non trouv\u00e9."
          },
          "500": {
            "description": "Erreur interne."
          }
        },
        "tags": [
          "User-Site Relations"
        ]
      }
    },
    "/users/sites/{user_id}/sites/{site_id}": {
      "delete": {
        "description": "Dissocie un site d'un utilisateur.",
        "parameters": [
          {
            "description": "ID de l'utilisateur",
            "in": "path",
            "name": "user_id",
            "required": true,
            "type": "integer"
          },
          {
            "description": "ID du site \u00e0 dissocier",
            "in": "path",
            "name": "site_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Site dissoci\u00e9 avec succ\u00e8s.",
            "schema": {
              "properties": {
                "message": {
                  "example": "Site dissoci\u00e9 de l'utilisateur.",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Utilisateur ou site non trouv\u00e9, ou site non associ\u00e9."
          },
          "500": {
            "description": "Erreur interne."
          }
        },
        "tags": [
          "User-Site Relations"
        ]
      }
    },
    "/users/{user_id}": {
      "delete": {
        "description": "Supprime un utilisateur par son ID.",
        "parameters": [
          {
            "description": "ID de l'utilisateur \u00e0 supprimer",
            "in": "path",
            "name": "user_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "Utilisateur supprim\u00e9 avec succ\u00e8s.",
            "schema": {
              "properties": {
                "message": {
                  "example": "Utilisateur supprim\u00e9 avec succ\u00e8s",
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Utilisateur non trouv\u00e9."
          },
          "500": {
            "description": "Erreur interne."
          }
        },
        "tags": [
          "User CRUD"
        ]
      },
      "get": {
        "description": "R\u00e9cup\u00e8re un utilisateur par son ID avec ses sites et r\u00f4les associ\u00e9s.",
        "parameters": [
          {
            "description": "ID de l'utilisateur \u00e0 r\u00e9cup\u00e9rer",
            "in": "path",
            "name": "user_id",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "D\u00e9tails de l'utilisateur.",
            "schema": {
              "properties": {
                "id": {
                  "example": 1,
                  "type": "integer"
                },
                "login": {
                  "example": "user1",
                  "type": "string"
                },
                "roles": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                "sites": {
                  "items": {
                    "properties": {
                      "id": {
                        "example": 3,
                        "type": "integer"
                      },
                      "name": {
                        "example": "Site test 1",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Utilisateur non trouv\u00e9."
          },
          "500": {
            "description": "Erreur interne."
          }
        },
        "tags": [
          "User CRUD"
        ]
      },
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Met \u00e0 jour un utilisateur existant par son ID.",
        "parameters": [
          {
            "description": "ID de l'utilisateur \u00e0 mettre \u00e0 jour",
            "in": "path",
            "name": "user_id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "login": {
                  "example": "updateduser",
                  "type": "string"
                },
                "password": {
                  "example": "updatedpassword",
                  "type": "string"
                },
                "roles": {
                  "description": "Liste des noms de r\u00f4les \u00e0 associer (optionnel)",
                  "items": {
                    "example": "admin",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Utilisateur mis \u00e0 jour avec succ\u00e8s.",
            "schema": {
              "properties": {
                "id": {
                  "example": 1,
                  "type": "integer"
                },
                "login": {
                  "example": "updateduser",
                  "type": "string"
                },
                "roles": {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "404": {
            "description": "Utilisateur non trouv\u00e9."
          },
          "500": {
            "description": "Erreur interne."
          }
        },
        "tags": [
          "User CRUD"
        ]
      }
    },
    "/users/{user_id}/update-with-relations": {
      "put": {
        "consumes": [
          "application/json"
        ],
        "description": "Met \u00e0 jour un utilisateur existant avec ses relations site-r\u00f4le en une seule requ\u00eate.",
        "parameters": [
          {
            "description": "ID de l'utilisateur \u00e0 mettre \u00e0 jour",
            "in": "path",
            "name": "user_id",
            "required": true,
            "type": "integer"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "properties": {
                "login": {
                  "example": "utilisateurmodifie",
                  "type": "string"
                },
                "password": {
                  "example": "nouveaumotdepasse",
                  "type": "string"
                },
                "replaceExistingRelations": {
                  "description": "Si true, remplace toutes les relations existantes. Si false, ajoute ou met \u00e0 jour les relations fournies.",
                  "example": false,
                  "type": "boolean"
                },
                "rolesBySite": {
                  "description": "Objet o\u00f9 les cl\u00e9s sont les IDs des sites et les valeurs sont les IDs des r\u00f4les",
                  "example": {
                    "1": 2,
                    "3": 1
                  },
                  "type": "object"
                }
              },
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Utilisateur mis \u00e0 jour avec succ\u00e8s avec ses relations.",
            "schema": {
              "properties": {
                "id": {
                  "example": 1,
                  "type": "integer"
                },
                "login": {
                  "example": "utilisateurmodifie",
                  "type": "string"
                },
                "relations": {
                  "items": {
                    "properties": {
                      "role_id": {
                        "example": 2,
                        "type": "integer"
                      },
                      "role_name": {
                        "example": "editor",
                        "type": "string"
                      },
                      "site_id": {
                        "example": 1,
                        "type": "integer"
                      },
                      "site_name": {
                        "example": "Site A",
                        "type": "string"
                      },
                      "status": {
                        "example": "created",
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "type": "array"
                }
              },
              "type": "object"
            }
          },
          "400": {
            "description": "Mauvaise requ\u00eate."
          },
          "404": {
            "description": "Utilisateur, site ou r\u00f4le non trouv\u00e9."
          },
          "500": {
            "description": "Erreur interne."
          }
        },
        "tags": [
          "User CRUD"
        ]
      }
    }
  },
  "swagger": "2.0",
  "tags": [
    {
      "description": "Authentification (login, logout)",
      "name": "Authentication"
    },
    {
      "description": "Gestion des utilisateurs",
      "name": "User CRUD"
    },
    {
      "description": "Gestion des sites",
      "name": "Site CRUD"
    },
    {
      "description": "Gestion des b\u00e2timents",
      "name": "Batiment CRUD"
    },
    {
      "description": "Gestion des \u00e9tages",
      "name": "Etage CRUD"
    },
    {
      "description": "Gestion des BAES (Blocs Autonomes d'\u00c9clairage de S\u00e9curit\u00e9)",
      "name": "BAES CRUD"
    },
    {
      "description": "Gestion des statuts/erreurs des BAES",
      "name": "Status CRUD"
    },
    {
      "description": "Gestion des cartes (plans, coordonn\u00e9es, zoom)",
      "name": "carte crud"
    },
    {
      "description": "Routes utilitaires et agr\u00e9g\u00e9es (ex: version API, donn\u00e9es consolid\u00e9es)",
      "name": "general"
    },
    {
      "description": "Param\u00e8tres de configuration",
      "name": "Configuration CRUD"
    }
  ]
}
